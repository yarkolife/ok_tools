═══════════════════════════════════════════════════════════════════
  PRODUCTION: Монтирование NAS на Debian 11 (без Docker)
═══════════════════════════════════════════════════════════════════

📋 СЦЕНАРИЙ:
   - Playout: \\192.168.188.1\sendedaten
   - Archive: \\другой_ip\archive (другой сетевой адрес!)
   - Приложение: gunicorn на Debian 11 VM

═══════════════════════════════════════════════════════════════════

█ ШАГ 1: Установка пакетов

sudo apt update
sudo apt install -y cifs-utils ffmpeg

═══════════════════════════════════════════════════════════════════

█ ШАГ 2: Создание точек монтирования

sudo mkdir -p /mnt/nas/playout
sudo mkdir -p /mnt/nas/archive
sudo chmod 755 /mnt/nas

═══════════════════════════════════════════════════════════════════

█ ШАГ 3: Создание credentials файлов

# Playout credentials
sudo nano /root/.smbcredentials_playout

username=твой_логин_playout
password=твой_пароль
domain=WORKGROUP

# Archive credentials (может быть другой!)
sudo nano /root/.smbcredentials_archive

username=твой_логин_archive
password=твой_пароль
domain=WORKGROUP

# Защити файлы
sudo chmod 600 /root/.smbcredentials_*

═══════════════════════════════════════════════════════════════════

█ ШАГ 4: Настройка /etc/fstab

sudo nano /etc/fstab

# Добавь в конец:

# NAS Playout - 192.168.188.1
//192.168.188.1/sendedaten  /mnt/nas/playout  cifs  credentials=/root/.smbcredentials_playout,uid=1000,gid=1000,file_mode=0755,dir_mode=0755,vers=3.0,_netdev,nofail  0  0

# NAS Archive - ЗАМЕНИ IP!
//192.168.XXX.XXX/archive  /mnt/nas/archive  cifs  credentials=/root/.smbcredentials_archive,uid=1000,gid=1000,file_mode=0755,dir_mode=0755,vers=3.0,_netdev,nofail  0  0

⚠️  ВАЖНО: Замени uid=1000,gid=1000 на ID пользователя gunicorn!
   Узнать ID: id -u www-data && id -g www-data

═══════════════════════════════════════════════════════════════════

█ ШАГ 5: Монтирование

# Тестовое монтирование
sudo mount -a

# Проверка
mount | grep cifs
ls -la /mnt/nas/playout
ls -la /mnt/nas/archive

═══════════════════════════════════════════════════════════════════

█ ШАГ 6: Обновление production.cfg

# Выбери свою конфигурацию
sudo nano /path/to/okmq-production.cfg

[media]
archive_path = /mnt/nas/archive/
playout_path = /mnt/nas/playout/
auto_scan = False
auto_copy_on_schedule = True

═══════════════════════════════════════════════════════════════════

█ ШАГ 7: Обновление gunicorn systemd service

sudo nano /etc/systemd/system/oktools.service

[Unit]
Description=OK Tools Gunicorn
After=network.target postgresql.service
# ⬇️ ДОБАВЬ ЭТИ СТРОКИ:
Requires=mnt-nas-playout.mount mnt-nas-archive.mount
After=mnt-nas-playout.mount mnt-nas-archive.mount

[Service]
Type=notify
User=www-data
Group=www-data
WorkingDirectory=/opt/ok-tools
Environment="PATH=/opt/ok-tools/venv/bin"
ExecStart=/opt/ok-tools/venv/bin/gunicorn ok_tools.wsgi:application --bind 127.0.0.1:8000

[Install]
WantedBy=multi-user.target

# Применить
sudo systemctl daemon-reload
sudo systemctl restart oktools.service

═══════════════════════════════════════════════════════════════════

█ ШАГ 8: Проверка доступа

# От имени пользователя gunicorn
sudo -u www-data ls -la /mnt/nas/playout
sudo -u www-data ls -la /mnt/nas/archive

# Тест записи (если нужно)
sudo -u www-data touch /mnt/nas/playout/test.txt
sudo -u www-data rm /mnt/nas/playout/test.txt

═══════════════════════════════════════════════════════════════════

█ ШАГ 9: Django Admin - создание Storage Locations

1. Открой: https://your-domain.de/admin/
2. Media Files → Storage locations → Add

   Playout:
   --------
   Name: Production Playout
   Type: PLAYOUT
   Path: /mnt/nas/playout/
   Description: Sendedaten - 192.168.188.1

   Archive:
   --------
   Name: Production Archive
   Type: ARCHIVE
   Path: /mnt/nas/archive/
   Description: Archive - 192.168.XXX.XXX

3. Сохрани

═══════════════════════════════════════════════════════════════════

█ ШАГ 10: Первое сканирование

source /opt/ok-tools/venv/bin/activate
cd /opt/ok-tools
python manage.py scan_video_storage

═══════════════════════════════════════════════════════════════════

🔧 ПОЛЕЗНЫЕ КОМАНДЫ:

# Проверка монтирования
mount | grep cifs

# Статус монтов через systemd
sudo systemctl status mnt-nas-*.mount

# Ремонтирование
sudo systemctl restart mnt-nas-playout.mount
sudo systemctl restart mnt-nas-archive.mount

# Статус gunicorn
sudo systemctl status oktools.service

# Логи gunicorn
sudo journalctl -u oktools.service -f

# Проверка прав доступа
sudo -u www-data ls -la /mnt/nas/playout

═══════════════════════════════════════════════════════════════════

🔍 TROUBLESHOOTING:

Проблема: "Host is down"
→ ping 192.168.188.1
→ smbclient -L //192.168.188.1 -U username

Проблема: "Permission denied"
→ Проверь uid/gid в fstab
→ id -u www-data && id -g www-data

Проблема: NAS не монтируется при загрузке
→ sudo systemctl enable mnt-nas-playout.mount
→ sudo systemctl enable mnt-nas-archive.mount

═══════════════════════════════════════════════════════════════════

📖 ПОЛНАЯ ДОКУМЕНТАЦИЯ: deployment/NAS_DEBIAN_SETUP.md

═══════════════════════════════════════════════════════════════════

